# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalAuthority',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('budget_limit', models.IntegerField(null=True, blank=True)),
                ('fund', models.IntegerField(null=True, verbose_name=b'Fund', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('approval_user', models.ForeignKey(related_name='auth_approving', blank=True, to=settings.AUTH_USER_MODEL, help_text=b'User with Approval Authority', null=True)),
            ],
            options={
                'ordering': ('approval_user',),
                'verbose_name_plural': 'Approval Authority',
            },
        ),
        migrations.CreateModel(
            name='Benchmarks',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('percent_complete', models.IntegerField(null=True, verbose_name=b'% complete', blank=True)),
                ('percent_cumulative', models.IntegerField(null=True, verbose_name=b'% cumulative completion', blank=True)),
                ('description', models.CharField(max_length=255, verbose_name=b'Description', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('description',),
                'verbose_name_plural': 'Benchmarks',
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('beneficiary_name', models.CharField(max_length=255, null=True, blank=True)),
                ('father_name', models.CharField(max_length=255, null=True, blank=True)),
                ('age', models.IntegerField(null=True, blank=True)),
                ('gender', models.CharField(max_length=255, null=True, blank=True)),
                ('signature', models.BooleanField(default=True)),
                ('remarks', models.CharField(max_length=255, null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('beneficiary_name',),
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contributor', models.CharField(max_length=135, null=True, blank=True)),
                ('description_of_contribution', models.CharField(max_length=255, null=True, blank=True)),
                ('proposed_value', models.IntegerField(default=0, null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('contributor',),
            },
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('capacity', models.CharField(max_length=255, null=True, verbose_name=b'Capacity', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('capacity',),
                'verbose_name_plural': 'Capacity',
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, null=True, verbose_name=b'Profile Name', blank=True)),
                ('existing_village', models.BooleanField(default=b'False', verbose_name=b'Is There an existing shura or CDC?')),
                ('existing_village_descr', models.CharField(max_length=255, null=True, verbose_name=b'If Yes please describe', blank=True)),
                ('community_leader', models.CharField(max_length=255, null=True, verbose_name=b'Community Malik/Elder Name', blank=True)),
                ('head_of_institution', models.CharField(max_length=255, null=True, verbose_name=b'Head of Shura/Institution', blank=True)),
                ('date_of_firstcontact', models.DateTimeField(null=True, blank=True)),
                ('contact_number', models.CharField(max_length=255, null=True, verbose_name=b'Head of Shura/Institution', blank=True)),
                ('num_members', models.CharField(max_length=255, null=True, verbose_name=b'Number of Members', blank=True)),
                ('distance_district_capital', models.IntegerField(help_text=b'In KM', null=True, verbose_name=b'Distance from District Capital', blank=True)),
                ('distance_site_camp', models.IntegerField(help_text=b'In KM', null=True, verbose_name=b'Distance from Site Camp', blank=True)),
                ('distance_field_office', models.IntegerField(help_text=b'In KM', null=True, verbose_name=b'Distance from MC Field Office', blank=True)),
                ('total_num_households', models.IntegerField(help_text=b'', null=True, verbose_name=b'Total # Households', blank=True)),
                ('avg_household_size', models.DecimalField(null=True, verbose_name=b'Average Household Size', max_digits=25, decimal_places=14, blank=True)),
                ('male_0_14', models.IntegerField(null=True, verbose_name=b'Male age 0-14', blank=True)),
                ('female_0_14', models.IntegerField(null=True, verbose_name=b'Female age 0-14', blank=True)),
                ('male_15_24', models.IntegerField(null=True, verbose_name=b'Male age 15-24 ', blank=True)),
                ('female_15_24', models.IntegerField(null=True, verbose_name=b'Female age 15-24', blank=True)),
                ('male_25_59', models.IntegerField(null=True, verbose_name=b'Male age 25-59', blank=True)),
                ('female_25_59', models.IntegerField(null=True, verbose_name=b'Female age 25-59', blank=True)),
                ('male_over_60', models.IntegerField(null=True, verbose_name=b'Male Over 60', blank=True)),
                ('female_over_60', models.IntegerField(null=True, verbose_name=b'Female Over 60', blank=True)),
                ('total_population', models.IntegerField(null=True, blank=True)),
                ('total_land', models.IntegerField(help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Land', blank=True)),
                ('total_agricultural_land', models.IntegerField(help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Agricultural Land', blank=True)),
                ('total_rainfed_land', models.IntegerField(help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Rain-fed Land', blank=True)),
                ('total_horticultural_land', models.IntegerField(help_text=b'In hectares/jeribs', null=True, verbose_name=b'Total Horticultural Land', blank=True)),
                ('total_literate_peoples', models.IntegerField(help_text=b'', null=True, verbose_name=b'Total Literate People', blank=True)),
                ('literate_males', models.IntegerField(help_text=b'', null=True, verbose_name=b'Number of Literate Males', blank=True)),
                ('literate_females', models.IntegerField(help_text=b'', null=True, verbose_name=b'Number of Literate Females', blank=True)),
                ('literacy_rate', models.IntegerField(help_text=b'', null=True, verbose_name=b'Literacy Rate (%)', blank=True)),
                ('households_owning_land', models.IntegerField(help_text=b'(%)', null=True, verbose_name=b'Population Owning Land', blank=True)),
                ('avg_landholding_size', models.IntegerField(help_text=b'In hectares/jeribs', null=True, verbose_name=b'Average Landholding Size', blank=True)),
                ('households_owning_livestock', models.IntegerField(help_text=b'(%)', null=True, verbose_name=b'Population Owning Livestock', blank=True)),
                ('animal_type', models.CharField(help_text=b'See Guide for Calculation', max_length=255, null=True, verbose_name=b'Animal Types', blank=True)),
                ('num_animals_population_owning', models.CharField(help_text=b'What?', max_length=255, null=True, blank=True)),
                ('village', models.CharField(help_text=b'', max_length=255, null=True, verbose_name=b'Village', blank=True)),
                ('latitude', models.DecimalField(null=True, verbose_name=b'Latitude (Coordinates)', max_digits=25, decimal_places=14, blank=True)),
                ('longitude', models.DecimalField(null=True, verbose_name=b'Longitude (Coordinates)', max_digits=25, decimal_places=14, blank=True)),
                ('approval', models.CharField(default=b'in progress', max_length=255, null=True, verbose_name=b'Approval', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('approved_by', models.ForeignKey(related_name='comm_approving', blank=True, to=settings.AUTH_USER_MODEL, help_text=b'This is the Provincial Line Manager', null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Communities',
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contributor', models.CharField(max_length=255, verbose_name=b'Contributor', blank=True)),
                ('description', models.CharField(max_length=255, verbose_name=b'Description of Contribution', blank=True)),
                ('value', models.CharField(max_length=255, verbose_name=b'Value of Contribution', blank=True)),
                ('actual', models.BooleanField(default=None, verbose_name=b'Is an Actual Contribution')),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('contributor',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('country', models.CharField(max_length=255, verbose_name=b'Country Name', blank=True)),
                ('code', models.CharField(max_length=4, verbose_name=b'2 Letter Country Code', blank=True)),
                ('description', models.CharField(max_length=255, verbose_name=b'Description/Notes', blank=True)),
                ('latitude', models.CharField(max_length=255, null=True, verbose_name=b'Latitude', blank=True)),
                ('longitude', models.CharField(max_length=255, null=True, verbose_name=b'Longitude', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('country',),
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, verbose_name=b'District Name', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=135, null=True, verbose_name=b'Name of Document', blank=True)),
                ('url', models.CharField(max_length=135, null=True, verbose_name=b'URL (Link to document or document repository)', blank=True)),
                ('description', models.CharField(max_length=255, null=True, blank=True)),
                ('file_field', models.FileField(null=True, upload_to=b'uploads', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Documentation',
            },
        ),
        migrations.CreateModel(
            name='DocumentationApp',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('documentation', models.TextField(null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Evaluate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('evaluate', models.CharField(max_length=255, null=True, verbose_name=b'How will you evaluate the outcome or impact of the project?', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('evaluate',),
                'verbose_name_plural': 'Evaluate',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('question', models.TextField(null=True, blank=True)),
                ('answer', models.TextField(null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('note', models.TextField()),
                ('page', models.CharField(max_length=135)),
                ('severity', models.CharField(max_length=135)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('submitter', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='MergeMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('from_column', models.CharField(max_length=255, blank=True)),
                ('to_column', models.CharField(max_length=255, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('responsible_person', models.CharField(max_length=25, null=True, verbose_name=b'Person Responsible', blank=True)),
                ('frequency', models.CharField(max_length=25, null=True, verbose_name=b'Frequency', blank=True)),
                ('type', models.TextField(null=True, verbose_name=b'Type', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('type',),
                'verbose_name_plural': 'Monitors',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, verbose_name=b'Office Name', blank=True)),
                ('code', models.CharField(max_length=255, verbose_name=b'Office Code', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProfileType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('profile', models.CharField(max_length=255, verbose_name=b'Profile Name', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('profile',),
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('gaitid', models.CharField(unique=True, max_length=255, verbose_name=b'GAITID', blank=True)),
                ('name', models.CharField(max_length=255, verbose_name=b'Program Name', blank=True)),
                ('funding_status', models.CharField(max_length=255, verbose_name=b'Funding Status', blank=True)),
                ('cost_center', models.CharField(max_length=255, null=True, verbose_name=b'Fund Code', blank=True)),
                ('description', models.CharField(max_length=765, null=True, verbose_name=b'Program Description', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('country', models.ManyToManyField(to='activitydb.Country')),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='ProgramDashboard',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('project_proposal_count', models.IntegerField(null=True, blank=True)),
                ('project_proposal_count_approved', models.IntegerField(null=True, blank=True)),
                ('project_agreement_count', models.IntegerField(null=True, blank=True)),
                ('project_agreement_count_approved', models.IntegerField(null=True, blank=True)),
                ('project_completion_count', models.IntegerField(null=True, blank=True)),
                ('project_completion_count_approved', models.IntegerField(null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('program', models.ForeignKey(blank=True, to='activitydb.Program', null=True)),
            ],
            options={
                'ordering': ('program',),
            },
        ),
        migrations.CreateModel(
            name='ProjectAgreement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date_of_request', models.DateTimeField(null=True, verbose_name=b'Date of Request', blank=True)),
                ('project_name', models.CharField(help_text=b'Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, null=True, verbose_name=b'Project Name', blank=True)),
                ('project_activity', models.CharField(help_text=b'This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name=b'Project Activity', blank=True)),
                ('project_description', models.TextField(help_text=b'Description must meet the Criteria.  Will translate description into three languages: English, Dari and Pashto)', null=True, verbose_name=b'Project Description', blank=True)),
                ('activity_code', models.CharField(help_text=b'Please request Activity Code from Kabul MEL', max_length=255, null=True, verbose_name=b'Activity Code', blank=True)),
                ('cod_num', models.CharField(max_length=255, null=True, verbose_name=b'Project COD #', blank=True)),
                ('external_stakeholder_list', models.FileField(help_text=b'Please refer to PM@MC Section 01: Identification and Design under 1.1', upload_to=b'uploads', null=True, verbose_name=b'External stakeholder list', blank=True)),
                ('project_design', models.CharField(max_length=255, null=True, verbose_name=b'Activity design for', blank=True)),
                ('account_code', models.CharField(help_text=b'optional - request from finance', max_length=255, null=True, verbose_name=b'Account Code', blank=True)),
                ('lin_code', models.CharField(help_text=b'optional - request from finance', max_length=255, null=True, verbose_name=b'LIN Sub Code', blank=True)),
                ('staff_responsible', models.CharField(max_length=255, null=True, verbose_name=b'MC Staff Responsible', blank=True)),
                ('partners', models.BooleanField(default=0, verbose_name=b'Are there partners involved?')),
                ('name_of_partners', models.CharField(max_length=255, null=True, verbose_name=b'Name of Partners', blank=True)),
                ('program_objectives', models.TextField(null=True, verbose_name=b'What Program Objectives does this help fulfill?', blank=True)),
                ('mc_objectives', models.TextField(null=True, verbose_name=b'What MC strategic Objectives does this help fulfill?', blank=True)),
                ('effect_or_impact', models.TextField(null=True, verbose_name=b'What is the anticipated effect of impact of this project?', blank=True)),
                ('expected_start_date', models.DateTimeField(null=True, verbose_name=b'Expected starting date', blank=True)),
                ('expected_end_date', models.DateTimeField(null=True, verbose_name=b'Expected ending date', blank=True)),
                ('expected_duration', models.CharField(help_text=b'[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name=b'Expected duration', blank=True)),
                ('beneficiary_type', models.CharField(help_text=b'i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name=b'Type of direct beneficiaries', blank=True)),
                ('estimated_num_direct_beneficiaries', models.CharField(help_text=b"Please provide achievable estimates as we will use these as are 'Targets'", max_length=255, null=True, verbose_name=b'Estimated number of direct beneficiaries', blank=True)),
                ('average_household_size', models.CharField(help_text=b'Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name=b'Average Household Size', blank=True)),
                ('estimated_num_indirect_beneficiaries', models.CharField(help_text=b'This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name=b'Estimated Number of indirect beneficiaries', blank=True)),
                ('total_estimated_budget', models.CharField(help_text=b'In USD', max_length=255, null=True, blank=True)),
                ('mc_estimated_budget', models.CharField(help_text=b'In USD', max_length=255, null=True, blank=True)),
                ('estimation_date', models.DateTimeField(null=True, blank=True)),
                ('estimated_by_date', models.DateTimeField(null=True, verbose_name=b'Date Estimated', blank=True)),
                ('checked_by_date', models.DateTimeField(null=True, verbose_name=b'Date Checked', blank=True)),
                ('reviewed_by_date', models.DateTimeField(null=True, verbose_name=b'Date Reviewed', blank=True)),
                ('finance_reviewed_by_date', models.DateTimeField(null=True, verbose_name=b'Date Reviewed by Finance', blank=True)),
                ('me_reviewed_by_date', models.DateTimeField(null=True, verbose_name=b'Date Reviewed by M&E', blank=True)),
                ('capacity', models.CharField(max_length=255, null=True, verbose_name=b'Capacity', blank=True)),
                ('evaluate', models.CharField(max_length=255, null=True, verbose_name=b'How will you evaluate the outcome or impact of the project?', blank=True)),
                ('approval', models.CharField(default=b'in progress', max_length=255, null=True, verbose_name=b'Status', blank=True)),
                ('approved_by_date', models.DateTimeField(null=True, verbose_name=b'Date Approved', blank=True)),
                ('approval_remarks', models.CharField(max_length=255, null=True, verbose_name=b'Approval Remarks', blank=True)),
                ('justification_background', models.TextField(null=True, verbose_name=b'General background and problem statement', blank=True)),
                ('justification_description_community_selection', models.TextField(null=True, verbose_name=b'Description of community selection criteria', blank=True)),
                ('description_of_project_activities', models.TextField(null=True, blank=True)),
                ('description_of_government_involvement', models.TextField(null=True, blank=True)),
                ('description_of_community_involvement', models.TextField(null=True, blank=True)),
                ('documentation_government_approval', models.FileField(upload_to=b'uploads', null=True, verbose_name=b'Upload Government Documentation of Approval', blank=True)),
                ('documentation_community_approval', models.FileField(upload_to=b'uploads', null=True, verbose_name=b'Upload Community Documentation of Approval', blank=True)),
                ('create_date', models.DateTimeField(null=True, verbose_name=b'Date Created', blank=True)),
                ('edit_date', models.DateTimeField(null=True, verbose_name=b'Last Edit Date', blank=True)),
                ('approval_submitted_by', models.ForeignKey(related_name='submitted_by_agreement', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('approved_by', models.ForeignKey(related_name='approving_agreement', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('checked_by', models.ForeignKey(related_name='checking', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('community', models.ManyToManyField(to='activitydb.Community', blank=True)),
                ('estimated_by', models.ForeignKey(related_name='estimating', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('finance_reviewed_by', models.ForeignKey(related_name='finance_reviewing', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('me_reviewed_by', models.ForeignKey(related_name='reviewing_me', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('office', models.ForeignKey(blank=True, to='activitydb.Office', null=True)),
                ('program', models.ForeignKey(related_name='agreement', blank=True, to='activitydb.Program', null=True)),
            ],
            options={
                'ordering': ('create_date',),
                'permissions': (('can_approve', 'Can approve proposal'),),
            },
        ),
        migrations.CreateModel(
            name='ProjectComplete',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('activity_code', models.CharField(max_length=255, null=True, verbose_name=b'Activity Code', blank=True)),
                ('project_name', models.CharField(max_length=255, null=True, verbose_name=b'Activity Name', blank=True)),
                ('project_activity', models.CharField(max_length=255, null=True, verbose_name=b'Project Activity', blank=True)),
                ('expected_start_date', models.DateTimeField(help_text=b'Comes from Form-04 Project Agreement', null=True, blank=True)),
                ('expected_end_date', models.DateTimeField(help_text=b'Comes from Form-04 Project Agreement', null=True, blank=True)),
                ('expected_duration', models.CharField(help_text=b'Comes from Form-04 Project Agreement', max_length=255, null=True, verbose_name=b'Expected Duration', blank=True)),
                ('actual_start_date', models.DateTimeField(help_text=b'Comes from Form-04 Project Agreement', null=True, blank=True)),
                ('actual_end_date', models.DateTimeField(null=True, blank=True)),
                ('actual_duration', models.CharField(max_length=255, null=True, blank=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(null=True, verbose_name=b'If not on time explain delay', blank=True)),
                ('estimated_budget', models.CharField(help_text=b'Comes from Form-04 Project Agreement', max_length=255, null=True, verbose_name=b'Estimated Budget', blank=True)),
                ('actual_budget', models.CharField(help_text=b'What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_length=255, null=True, verbose_name=b'Actual Budget', blank=True)),
                ('budget_variance', models.CharField(max_length=255, null=True, verbose_name=b'Budget Variance', blank=True)),
                ('explanation_of_variance', models.CharField(max_length=255, null=True, verbose_name=b'Explanation of variance', blank=True)),
                ('direct_beneficiaries', models.CharField(max_length=255, null=True, verbose_name=b'Actual Direct Beneficiaries', blank=True)),
                ('jobs_created', models.CharField(max_length=255, null=True, verbose_name=b'Number of Jobs Created', blank=True)),
                ('jobs_part_time', models.CharField(max_length=255, null=True, verbose_name=b'Part Time Jobs', blank=True)),
                ('jobs_full_time', models.CharField(max_length=255, null=True, verbose_name=b'Full Time Jobs', blank=True)),
                ('government_involvement', models.CharField(max_length=255, null=True, verbose_name=b'Government Involvement', blank=True)),
                ('capacity_built', models.CharField(max_length=255, null=True, verbose_name=b'What capacity was built to ensure sustainability?', blank=True)),
                ('issues_and_challenges', models.TextField(null=True, verbose_name=b'List any issues or challenges faced (include reasons for delays)', blank=True)),
                ('lessons_learned', models.TextField(null=True, verbose_name=b'Lessons learned', blank=True)),
                ('approval', models.CharField(default=b'in progress', max_length=255, null=True, verbose_name=b'Status', blank=True)),
                ('approval_remarks', models.CharField(max_length=255, null=True, verbose_name=b'Approval Remarks', blank=True)),
                ('create_date', models.DateTimeField(null=True, verbose_name=b'Date Created', blank=True)),
                ('edit_date', models.DateTimeField(null=True, verbose_name=b'Last Edit Date', blank=True)),
                ('approval_submitted_by', models.ForeignKey(related_name='submitted_by_complete', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('approved_by', models.ForeignKey(related_name='approving_agreement_complete', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('checked_by', models.ForeignKey(related_name='checking_complete', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('community', models.ManyToManyField(to='activitydb.Community', blank=True)),
                ('estimated_by', models.ForeignKey(related_name='estimating_complete', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('office', models.ForeignKey(blank=True, to='activitydb.Office', null=True)),
                ('program', models.ForeignKey(related_name='complete', blank=True, to='activitydb.Program', null=True)),
                ('project_agreement', models.ForeignKey(to='activitydb.ProjectAgreement')),
            ],
            options={
                'ordering': ('create_date',),
                'verbose_name_plural': 'Activity Completions',
            },
        ),
        migrations.CreateModel(
            name='ProjectProposal',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('proposal_num', models.CharField(max_length=255, null=True, verbose_name=b'Proposal Number', blank=True)),
                ('date_of_request', models.DateTimeField(null=True, verbose_name=b'Date of Request', blank=True)),
                ('project_name', models.CharField(help_text=b'Please be specific in your name.  Consider that your Activity Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name=b'Activity Name')),
                ('project_activity', models.CharField(help_text=b'This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name=b'Project Activity', blank=True)),
                ('community_rep', models.CharField(max_length=255, null=True, verbose_name=b'Community Representative', blank=True)),
                ('community_rep_contact', models.CharField(help_text=b'Can have mulitple contact numbers', max_length=255, null=True, verbose_name=b'Community Representative Contact', blank=True)),
                ('community_mobilizer', models.CharField(max_length=255, null=True, verbose_name=b'MC Community Mobilizer', blank=True)),
                ('community_mobilizer_contact', models.CharField(max_length=255, null=True, verbose_name=b'MC Community Mobilizer Contact Number', blank=True)),
                ('has_rej_letter', models.BooleanField(default=False, help_text=b'If yes attach copy', verbose_name=b'If Rejected: Rejection Letter Sent?')),
                ('rejection_letter', models.FileField(upload_to=b'uploads', null=True, verbose_name=b'Rejection Letter', blank=True)),
                ('activity_code', models.CharField(help_text=b'If applicable at this stage, please request Activity Code from Kabul MEL', max_length=255, null=True, verbose_name=b'Activity Code', blank=True)),
                ('project_description', models.TextField(help_text=b'Description must meet the Criteria.  Will translate description into three languages: English, Dari and Pashto)', null=True, verbose_name=b'Project Description', blank=True)),
                ('approval', models.CharField(default=b'in progress', max_length=255, null=True, verbose_name=b'Status', blank=True)),
                ('approval_remarks', models.CharField(max_length=255, null=True, verbose_name=b'Approval Remarks', blank=True)),
                ('device_id', models.CharField(max_length=255, null=True, verbose_name=b'Device ID', blank=True)),
                ('date_approved', models.DateTimeField(null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, verbose_name=b'Date Created', blank=True)),
                ('edit_date', models.DateTimeField(null=True, verbose_name=b'Last Edit Date', blank=True)),
                ('latitude', models.CharField(max_length=255, null=True, verbose_name=b'Latitude (Coordinates)', blank=True)),
                ('longitude', models.CharField(max_length=255, null=True, verbose_name=b'Longitude (Coordinates)', blank=True)),
                ('approval_submitted_by', models.ForeignKey(related_name='requesting', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('approved_by', models.ForeignKey(related_name='approving', blank=True, to=settings.AUTH_USER_MODEL, help_text=b'This is the Provincial Line Manager', null=True)),
                ('community', models.ManyToManyField(to='activitydb.Community', blank=True)),
                ('estimated_by', models.ForeignKey(related_name='estimate', blank=True, to=settings.AUTH_USER_MODEL, help_text=b'This is the originator', null=True)),
                ('office', models.ForeignKey(blank=True, to='activitydb.Office', null=True)),
                ('program', models.ForeignKey(related_name='proposal', blank=True, to='activitydb.Program', null=True)),
            ],
            options={
                'ordering': ('create_date',),
                'permissions': (('can_approve', 'Can approve proposal'),),
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=135, verbose_name=b'Type of Activity')),
                ('description', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProjectTypeOther',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=135, verbose_name=b'Type of Activity')),
                ('description', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, verbose_name=b'Province Name', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('country', models.ForeignKey(to='activitydb.Country')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sector', models.CharField(max_length=255, verbose_name=b'Sector Name', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('sector',),
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=135, verbose_name=b'Name of Document')),
                ('documentation_type', models.CharField(max_length=135, verbose_name=b'Type (File or URL)')),
                ('description', models.CharField(max_length=255)),
                ('file_field', models.FileField(null=True, upload_to=b'uploads', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TrainingAttendance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('training_name', models.CharField(max_length=255)),
                ('implementer', models.CharField(max_length=255, null=True, blank=True)),
                ('reporting_period', models.CharField(max_length=255, null=True, blank=True)),
                ('total_participants', models.IntegerField(null=True, blank=True)),
                ('location', models.CharField(max_length=255, null=True, blank=True)),
                ('community', models.CharField(max_length=255, null=True, blank=True)),
                ('training_duration', models.CharField(max_length=255, null=True, blank=True)),
                ('start_date', models.CharField(max_length=255, null=True, blank=True)),
                ('end_date', models.CharField(max_length=255, null=True, blank=True)),
                ('trainer_name', models.CharField(max_length=255, null=True, blank=True)),
                ('trainer_contact_num', models.CharField(max_length=255, null=True, blank=True)),
                ('form_filled_by', models.CharField(max_length=255, null=True, blank=True)),
                ('form_filled_by_contact_num', models.CharField(max_length=255, null=True, blank=True)),
                ('total_male', models.IntegerField(null=True, blank=True)),
                ('total_female', models.IntegerField(null=True, blank=True)),
                ('total_age_0_14_male', models.IntegerField(null=True, blank=True)),
                ('total_age_0_14_female', models.IntegerField(null=True, blank=True)),
                ('total_age_15_24_male', models.IntegerField(null=True, blank=True)),
                ('total_age_15_24_female', models.IntegerField(null=True, blank=True)),
                ('total_age_25_59_male', models.IntegerField(null=True, blank=True)),
                ('total_age_25_59_female', models.IntegerField(null=True, blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('program', models.ForeignKey(blank=True, to='activitydb.Program', null=True)),
                ('project_proposal', models.ForeignKey(blank=True, to='activitydb.ProjectProposal', null=True)),
            ],
            options={
                'ordering': ('training_name',),
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, verbose_name=b'Village Name', blank=True)),
                ('create_date', models.DateTimeField(null=True, blank=True)),
                ('edit_date', models.DateTimeField(null=True, blank=True)),
                ('district', models.ForeignKey(to='activitydb.District')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='projectproposal',
            name='project_type',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectType', max_length=255, help_text=b'Please refer to Form 05 - Project Progress Summary', null=True),
        ),
        migrations.AddField(
            model_name='projectproposal',
            name='sector',
            field=models.ForeignKey(blank=True, to='activitydb.Sector', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='project_proposal',
            field=models.ForeignKey(to='activitydb.ProjectProposal'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='reviewed_by',
            field=models.ForeignKey(related_name='reviewing_complete', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_proposal',
            field=models.ForeignKey(to='activitydb.ProjectProposal'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_type',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectType', max_length=255, help_text=b'Please refer to Form 05 - Project Progress Summary', null=True),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_type_other',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectTypeOther', null=True),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='reviewed_by',
            field=models.ForeignKey(related_name='reviewing', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='sector',
            field=models.ForeignKey(blank=True, to='activitydb.Sector', null=True),
        ),
        migrations.AddField(
            model_name='programdashboard',
            name='project_agreement',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectAgreement', null=True),
        ),
        migrations.AddField(
            model_name='programdashboard',
            name='project_completion',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectComplete', null=True),
        ),
        migrations.AddField(
            model_name='programdashboard',
            name='project_proposal',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectProposal', null=True),
        ),
        migrations.AddField(
            model_name='program',
            name='sector',
            field=models.ForeignKey(blank=True, to='activitydb.Sector', null=True),
        ),
        migrations.AddField(
            model_name='office',
            name='province',
            field=models.ForeignKey(to='activitydb.Province'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='agreement',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectAgreement', null=True),
        ),
        migrations.AddField(
            model_name='monitor',
            name='complete',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectComplete', null=True),
        ),
        migrations.AddField(
            model_name='mergemap',
            name='project_agreement',
            field=models.ForeignKey(to='activitydb.ProjectAgreement', null=True),
        ),
        migrations.AddField(
            model_name='mergemap',
            name='project_completion',
            field=models.ForeignKey(to='activitydb.ProjectComplete', null=True),
        ),
        migrations.AddField(
            model_name='mergemap',
            name='project_proposal',
            field=models.ForeignKey(to='activitydb.ProjectProposal', null=True),
        ),
        migrations.AddField(
            model_name='documentation',
            name='project',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectProposal', null=True),
        ),
        migrations.AddField(
            model_name='documentation',
            name='template',
            field=models.ForeignKey(blank=True, to='activitydb.Template', null=True),
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(to='activitydb.Province'),
        ),
        migrations.AddField(
            model_name='contribution',
            name='project_agreement',
            field=models.ForeignKey(related_name='c_agreement', blank=True, to='activitydb.ProjectAgreement', null=True),
        ),
        migrations.AddField(
            model_name='contribution',
            name='project_complete',
            field=models.ForeignKey(related_name='c_complete', blank=True, to='activitydb.ProjectComplete', null=True),
        ),
        migrations.AddField(
            model_name='community',
            name='country',
            field=models.ForeignKey(to='activitydb.Country'),
        ),
        migrations.AddField(
            model_name='community',
            name='district',
            field=models.ForeignKey(blank=True, to='activitydb.District', null=True),
        ),
        migrations.AddField(
            model_name='community',
            name='filled_by',
            field=models.ForeignKey(related_name='comm_estimate', blank=True, to=settings.AUTH_USER_MODEL, help_text=b'This is the originator', null=True),
        ),
        migrations.AddField(
            model_name='community',
            name='office',
            field=models.ForeignKey(default=b'1', to='activitydb.Office'),
        ),
        migrations.AddField(
            model_name='community',
            name='province',
            field=models.ForeignKey(blank=True, to='activitydb.Province', null=True),
        ),
        migrations.AddField(
            model_name='community',
            name='type',
            field=models.ForeignKey(blank=True, to='activitydb.ProfileType', null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='agreement',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectAgreement', null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='complete',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectComplete', null=True),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='community',
            field=models.ForeignKey(blank=True, to='activitydb.Community', null=True),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='training',
            field=models.ForeignKey(blank=True, to='activitydb.TrainingAttendance', null=True),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='agreement',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectAgreement', null=True),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='complete',
            field=models.ForeignKey(blank=True, to='activitydb.ProjectComplete', null=True),
        ),
        migrations.AddField(
            model_name='approvalauthority',
            name='country',
            field=models.ForeignKey(blank=True, to='activitydb.Country', null=True),
        ),
    ]
